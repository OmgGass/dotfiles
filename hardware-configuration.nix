# Do not modify this file!  It was generated by â€˜nixos-generate-co>
# and may be overwritten by future invocations.  Please make chang>
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "ahci" "usb_st>
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" = { 
  device = "/dev/disk/by-uuid/3af48dbd-25d5-40a2-9819-255019bd";
      fsType = "btrfs";
      options = [ "subvol=@" ];
    };

  fileSystems."/home" = { 
  device = "/dev/disk/by-uuid/3af48dbd-25d5-40a2-9819-2550";19bd>
      fsType = "btrfs";
      options = [ "subvol=@home" ];
    };

  fileSystems."/nix" = { 
  device = "/dev/disk/by-uuid/3af48dbd-25d5-40a2-9819-255019bd";
      fsType = "btrfs";
      options = [ "subvol=@nix" ];
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/E6E8-3549";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case >
  # (the default) this is the recommended approach. When using sys>
  # still possible to use this option, but it's recommended to use>
  # with explicit per-interface declarations with `networking.inte>
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp1s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware>
}
